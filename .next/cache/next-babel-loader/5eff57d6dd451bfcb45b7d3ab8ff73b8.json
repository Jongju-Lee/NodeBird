{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\zerocho\\\\practice\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone, RetweetOutlined } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n\n  // const id = useSelector((state) => state.user.me?.id);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"\\uB313\\uAE00 \\uBD80\\uBD84\"));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","RetweetOutlined","Avatar","Button","Card","Popover","React","useCallback","useState","PropTypes","useSelector","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","__jsx","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","twoToneColor","onClick","content","Group","User","Fragment","type","Meta","avatar","nickname","title","description","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["C:/web/zerocho/practice/prepare/front/components/PostCard.js"],"sourcesContent":["import {\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n  HeartTwoTone,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Popover } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  // const id = useSelector((state) => state.user.me?.id);\r\n  const id = useSelector((state) => state.user.me && state.user.me.id);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        {/* <Image />\r\n        <Content />\r\n        <Buttons></Buttons> */}\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && <div>댓글 부분</div>}\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":";;AAAA,SACEA,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,YAAY,EACZC,eAAe,QACV,mBAAmB;AAC1B,SAASC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AACpD,OAAOC,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,UAAU,MAAM,cAAc;AAErC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAIP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM;IAAA,GAACQ,iBAAiB;IAAA,GAAEC;EAAoB,IAAIT,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMU,YAAY,GAAGX,WAAW,CAAC,MAAM;IACrCQ,QAAQ,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGb,WAAW,CAAC,MAAM;IACxCU,oBAAoB,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,EAAE,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,IAAIF,KAAK,CAACC,IAAI,CAACC,EAAE,CAACH,EAAE,CAAC;EAEpE,OACEI,KAAA;IAAKC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/BR,KAAA,CAACrB,IAAI;IACH8B,KAAK,EAAErB,IAAI,CAACsB,MAAM,CAAC,CAAC,CAAC,IAAIV,KAAA,CAACd,UAAU;MAACyB,MAAM,EAAEvB,IAAI,CAACsB,MAAO;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAC7DI,OAAO,EAAE,CACPZ,KAAA,CAACxB,eAAe;MAACqC,GAAG,EAAC,SAAS;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACjCnB,KAAK,GACHW,KAAA,CAACzB,YAAY;MACXuC,YAAY,EAAC,SAAS;MACtBD,GAAG,EAAC,OAAO;MACXE,OAAO,EAAEtB,YAAa;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CAAC,GAEFR,KAAA,CAAC5B,aAAa;MAACyC,GAAG,EAAC,OAAO;MAACE,OAAO,EAAEtB,YAAa;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACpD,EACDR,KAAA,CAAC3B,eAAe;MAACwC,GAAG,EAAC,SAAS;MAACE,OAAO,EAAEpB,eAAgB;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC3DR,KAAA,CAACpB,OAAO;MACNiC,GAAG,EAAC,MAAM;MACVG,OAAO,EACLhB,KAAA,CAACtB,MAAM,CAACuC,KAAK;QAAAd,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACVZ,EAAE,IAAIR,IAAI,CAAC8B,IAAI,CAACtB,EAAE,KAAKA,EAAE,GACxBI,KAAA,CAAAnB,KAAA,CAAAsC,QAAA,QACEnB,KAAA,CAACtB,MAAM;QAAAyB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAAC,EACnBR,KAAA,CAACtB,MAAM;QAAC0C,IAAI,EAAC,QAAQ;QAAAjB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAChC,CAAC,GAEHR,KAAA,CAACtB,MAAM;QAAAyB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAER,CACf;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDR,KAAA,CAAC1B,gBAAgB;MAAA6B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACZ,CAAC,CACV;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAKFR,KAAA,CAACrB,IAAI,CAAC0C,IAAI;IACRC,MAAM,EAAEtB,KAAA,CAACvB,MAAM;MAAA0B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEpB,IAAI,CAAC8B,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAU,CAAE;IACjDC,KAAK,EAAEpC,IAAI,CAAC8B,IAAI,CAACK,QAAS;IAC1BE,WAAW,EAAErC,IAAI,CAAC4B,OAAQ;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACG,CAAC,EACNjB,iBAAiB,IAAIS,KAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,8BAAe,CAGlC,CAAC;AAEV,CAAC;AAEDrB,QAAQ,CAACuC,SAAS,GAAG;EACnBtC,IAAI,EAAEJ,SAAS,CAAC2C,KAAK,CAAC;IACpB/B,EAAE,EAAEZ,SAAS,CAAC4C,MAAM;IACpBV,IAAI,EAAElC,SAAS,CAAC6C,MAAM;IACtBb,OAAO,EAAEhC,SAAS,CAAC8C,MAAM;IACzBC,SAAS,EAAE/C,SAAS,CAAC6C,MAAM;IAC3BG,QAAQ,EAAEhD,SAAS,CAACiD,OAAO,CAACjD,SAAS,CAAC6C,MAAM,CAAC;IAC7CnB,MAAM,EAAE1B,SAAS,CAACiD,OAAO,CAACjD,SAAS,CAAC6C,MAAM;EAC5C,CAAC,CAAC,CAACK;AACL,CAAC;AAED,eAAe/C,QAAQ"},"metadata":{},"sourceType":"module"}